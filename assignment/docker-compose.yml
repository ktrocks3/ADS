version: "3.9"
services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    # Keep Redis data only in RAM; wiped on container stop/recreate
    tmpfs:
      - /data
    restart: unless-stopped

  server1: &srv
    build: ./server
    environment:
      - SERVICE_PORT=18861
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DATA_DIR=/app/data
    depends_on: [redis]
    restart: unless-stopped

  server2:
    <<: *srv

  server3:
    <<: *srv

  lb:
    build: ./lb
    depends_on: [server1, server2, server3]
    environment:
      - ALGO=lc
      - LB_PORT=9000
      - EXTRA_INFO=0
      - ENABLE_GUI=0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    ports:
      - "9000:9000"
    restart: unless-stopped

  dashboard:
    build: ./dashboard
    depends_on: [redis, lb]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    ports:
      - "8080:8080"
    restart: "no"
    profiles: ["gui"]

  client:
    build: ./client
    depends_on: [lb]
    environment:
      - SERVER_HOST=lb
      - RPYC_PORT=9000
      - TWO_PASSES=1
      - SAVE_CSV=1
      - TIME_BETWEEN=0.5
      - INF_PASS=0
      - SAMPLE_SIZE=20
    volumes:
      - ./results:/results
    command: ["python", "client.py"]
    restart: "no"
